name: Unified_CI_Workflow  # Define the name of the workflow

# Define when the workflow should trigger
on:
  pull_request:
    types:
      - labeled  # Trigger when a label is added
      - unlabeled  # Trigger when a label is removed
      - synchronize  # Trigger when commits are pushed to the PR
      - opened  # Trigger when a PR is opened
      - edited  # Trigger when a PR title or description is edited
      - ready_for_review  # Trigger when a draft PR is marked as ready
      - reopened  # Trigger when a closed PR is reopened
      - unlocked  # Trigger when a locked PR is unlocked
    branches: [master, develop, qa-master]  # Apply to these branches
  pull_request_review:
    types: [edited, dismissed]  # Trigger when a review is edited or dismissed
    branches: [master, develop, qa-master]
  workflow_dispatch:  # Allow manual triggering of the workflow

# Define environment variables
env:
  GITHUB_HEAD_NAME: $GITHUB_HEAD_REF  # Store the head branch name
  sonartoken: ${{ secrets.SONARQUBE_TOKEN }}  # Secret for SonarQube authentication
  sonarurl: ${{ secrets.SONARURL }}  # SonarQube URL stored in secrets

jobs:
  # ✅ CUSTOMAPI Build & Testing
  customapi_ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Up Java
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Cache Maven packages
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-      

      - name: Build & Test CustomAPI
        run: mvn clean install -Pcustomapi -Ddockerfile.skip=true

      - name: SonarQube Analysis - CustomAPI
        run: |
          mvn sonar:sonar -Dsonar.projectKey=ENGINEERING.KPIDASHBOARD.CUSTOMAPI \
            -Dsonar.projectName=ENGINEERING.KPIDASHBOARD.CUSTOMAPI \
            -Dsonar.branch.name=${{ env.GITHUB_HEAD_NAME }} \
            -Dsonar.host.url=${{ secrets.SONARQUBE_HOST }} \
            -Dsonar.login=${{ secrets.SONARQUBE_TOKEN }} -f pom.xml

      - name: Check SonarQube Quality Gate - CustomAPI
        run: |
          chmod +x SonarQG.sh
          ./SonarQG.sh ./target/sonar/report-task.txt

  # ✅ Final Job to Ensure Completion
  GitHub_CI_Complete:
    needs: [customapi_ci]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - name: Check Job Status
        run: |
          if [[ "${{ needs.customapi_ci.result }}" == "failure" || \
                "${{ needs.customapi_ci.result }}" == "cancelled" ]]; then
            echo "❌ Jobs failed or were cancelled. Failing CI."
            exit 1
          else
            echo "✅ All relevant jobs have passed."
          fi